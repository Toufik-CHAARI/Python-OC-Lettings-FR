version: 2.1

commands:
  setup_remote_docker_with_caching:
    description: "Setup Docker environment with caching"
    steps:
      - setup_remote_docker:
          docker_layer_caching: true

  clean_up_docker_environment:
    description: "Clean up Docker environment before build"
    steps:
      - run:
          name: Clean Up Docker Environment
          command: |
            echo "Cleaning up Docker images..."
            docker system prune -af
            echo "Docker environment cleaned up."

  

jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Setup virtualenv
          command: |
            python3 -m venv venv
            . venv/bin/activate
      - run:
          name: Install dependencies
          command: |
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Run flake8 linter
          command: |
            . venv/bin/activate
            flake8 .
      - run:
          name: Run pytest with coverage
          command: |
            . venv/bin/activate
            pytest --cov=profiles --cov=lettings --cov-report=term --cov-fail-under=80

  build-and-push-docker:
    docker:
      - image: cimg/base:stable
    resource_class: xlarge
    steps:
      - checkout
      - setup_remote_docker_with_caching
      - clean_up_docker_environment
      - run:
          name: Build and Verify Docker Image
          command: |
            echo "Starting Docker image build..."
            docker build -t $DOCKERHUB_USERNAME/oc_lettings_site:${CIRCLE_SHA1} -t $DOCKERHUB_USERNAME/oc_lettings_site:latest .
            echo "Build completed. Listing Docker images..."
            docker images
            echo "Verifying environment variables..."
            echo "DOCKERHUB_USERNAME: $DOCKERHUB_USERNAME"
            echo "CIRCLE_SHA1: $CIRCLE_SHA1"
            echo "HEROKU_APP_NAME: $HEROKU_APP_NAME"
      - run:
          name: Docker Hub Login
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Push Docker Image to DockerHub
          command: |
            echo "Pushing image to DockerHub..."
            docker push $DOCKERHUB_USERNAME/oc_lettings_site:${CIRCLE_SHA1}
            docker push $DOCKERHUB_USERNAME/oc_lettings_site:latest

  deploy-to-heroku:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker_with_caching
      - run:
          name: Install Heroku CLI
          command: |
            curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: Docker Hub Logout (Optional)
          command: docker logout
      - run:
          name: Docker Hub Login
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Heroku Login
          command: |
            echo "$HEROKU_API_KEY" | heroku auth:token
      - run:
          name: Login to Heroku Container Registry
          command: |
            echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com
      - run:
          name: Debug Docker Push
          command: |
            docker images
            echo "Attempting to push image..."
      - run:
          name: Verify Docker Images Before Tagging
          command: |
            echo "Listing Docker images..."
            docker images
            echo "Verifying environment variables..."
            echo "DOCKERHUB_USERNAME: $DOCKERHUB_USERNAME"
            echo "CIRCLE_SHA1: $CIRCLE_SHA1"
            echo "HEROKU_APP_NAME: $HEROKU_APP_NAME"
      - run:
          name: Pull Docker Image from DockerHub
          command: docker pull $DOCKERHUB_USERNAME/oc_lettings_site:latest
      - run:
          name: Tag and Push Docker Image to Heroku Container Registry
          command: |
            docker tag $DOCKERHUB_USERNAME/oc_lettings_site:${CIRCLE_SHA1} registry.heroku.com/$HEROKU_APP_NAME/web
            echo "Pushing image to Heroku..."
            docker push registry.heroku.com/$HEROKU_APP_NAME/web
      - run:
          name: Release the Image
          command: |
            heroku container:release web --app $HEROKU_APP_NAME

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-and-test
      - build-and-push-docker:
          requires:
            - build-and-test
          filters:
            branches:
              only: master
      - deploy-to-heroku:
          requires:
            - build-and-push-docker
          filters:
            branches:
              only: master
