# .circleci/config.yml

version: 2.1

commands:
  setup_docker_environment:
    description: "Setup Docker Environment"
    steps:
      - run:
          name: Install Docker client
          command: |
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io

      - setup_remote_docker:
          docker_layer_caching: true

      - run:
          name: Build and Push Docker Image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t $DOCKERHUB_USERNAME/oc_lettings_site:${CIRCLE_SHA1} .
            docker push $DOCKERHUB_USERNAME/oc_lettings_site:${CIRCLE_SHA1}

jobs:
  build-and-test:
    docker:
      # Specify the Docker image to use. Adjust the version as needed.
      - image: circleci/python:3.10
    working_directory: ~/repo
    steps:
      - checkout

      # Setup a virtual environment
      - run:
          name: Setup virtualenv
          command: |
            python3 -m venv venv
            . venv/bin/activate

      # Install dependencies
      - run:
          name: Install dependencies
          command: |
            . venv/bin/activate
            pip install -r requirements.txt

      # Run linter
      - run:
          name: Run flake8 linter
          command: |
            . venv/bin/activate
            flake8 .

      # Run tests with coverage
      - run:
          name: Run pytest with coverage
          command: |
            . venv/bin/activate
            pytest --cov=profiles --cov=lettings --cov-report=term --cov-fail-under=80

  build-and-push-docker:
    docker:
      - image: cimg/base:stable
    resource_class: large
    steps:
      - checkout
      - setup_remote_docker:   
          version: 20.10.6   
          docker_layer_caching: true   
      - run:
          name: Build and Push Docker Image
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t $DOCKERHUB_USERNAME/oc_lettings_site:${CIRCLE_SHA1} .
            docker push $DOCKERHUB_USERNAME/oc_lettings_site:${CIRCLE_SHA1}
  deploy-to-heroku:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: Install Heroku CLI
          command: |
            curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: Heroku Login
          command: |
            echo "$HEROKU_API_KEY" | heroku auth:token
      - run:
          name: Login to Container Registry
          command: |
            echo "$HEROKU_API_KEY" | docker login --username=_ --password-stdin registry.heroku.com
      - run:
          name: Push Docker Image to Heroku Container Registry
          command: |
            docker build -t $DOCKERHUB_USERNAME/oc_lettings_site:${CIRCLE_SHA1} .
            docker push $DOCKERHUB_USERNAME/oc_lettings_site:${CIRCLE_SHA1}
      - run:
          name: Release the Image
          command: |
            heroku container:release web --app $HEROKU_APP_NAME



workflows:
  version: 2
  build-deploy:
    jobs:
      - build-and-test          
      - build-and-push-docker:
          requires:
            - build-and-test
          filters:
            branches:
              only: master  # Only run on master branch
      - deploy-to-heroku:
          requires:
            - build-and-push-docker
          filters:
            branches:
              only: master  # Only run on master branch